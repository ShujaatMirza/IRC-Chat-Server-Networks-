The purpose of this project was to give us experience in developing concurrent network applications. We used the Berkeley Sockets API to write an Internet chat server using a subset of the Internet Relay Chat protocol (IRC) . IRC is a global, distributed, real-time chat system that operates over the Internet. An IRC network consists of a set of interconnected servers. Once users are connected to an IRC server, they can converse with other users connected to any server in the IRC network. IRC provides for group communication, via named channels, as well as personal communication through “private” messages.


Sircd.c contains the code for my socket that accepts, binds and listens for the clients and data concurrently using Select(). When Data arrives, it is passes to the handle_line function in irc_proto.c where it is sent to appropriate command based on the parameters. I use client_array to store all the clients based on their scoket descripter number. I use channel_array to store the names and the number of users in each channel. These structures are defined in sircd.h. KIndly run the make file by passing the make in terminal. Afterwards, use ./sircd 1 node1.conf to run the server. In order to connect clients to this server, use telnet localhost 20102. And this will make our IRC chat server up and going :)
